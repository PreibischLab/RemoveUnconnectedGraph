here is the new version:
 
'f' - hold key down while moving the mouse paints into the image 'left arrow' - go to previous timepoint 'right arrow' - go to next timepoint  Also the bug is removed where it got stuck ... 
 
your plugin is finally done, I actually like it  
It works on single channel and composite. If it is composite, it will ask you which channel is the segmentation channel. 
Now, here comes how it works: 
's' - shows all nodes (where lines meet, so you get an idea)
	RED - dead ends 
	MAGENTA - nodes that have two connections (and are actually therefore no nodes) - they are created when you delete one segment. They had three nodes before, now they have only two ... pressing 'r' (see below) will get rid of them
	GREEN - nodes with 3 or more segments connecting to it 'x' - remove all dead ends 'r' - re-analyze the image (if you draw something manually in there or if you want him to re-detect nodes, e.g. to get rid of the MAGENTA nodes)  mouse click - select a segment, pressing 'd' will delete it
	
	If you have more questions let me know, we can skype, here is a screenshot (one segment in the middle selected) and the jar that you have to put into the plugin directory.

Todo:
	- track just one junction over time (see Kuba's PDF)
	- press 'R' to transfer all of it to the ROI manager
	
	
How to make your own plugin:

	- install latest Java SE (http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)
	- download Maven .bin.zip (https://maven.apache.org/download.cgi)
	- install Maven (https://maven.apache.org/install.html)
	
	- open Terminal
	- go to folder
	- run "./build.sh" OR "mvn clean package -Denforcer.skip=true"
	- creates a JAR file in the target directory, copy it to the Fiji plugins directory (and delete the old version)

How to import the project in Eclipse:

	- download Eclipse JDT (http://www.eclipse.org/downloads/packages/eclipse-ide-java-developers/oxygen3a)
	- run Eclipse
	- import Existing Maven Project
	- select the pom.xml file, ok

My ~/.bash_profile file looks like this:

export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/
export M2_HOME=/Users/spreibi/apache-maven-3.5.0
export PATH=$PATH:$M2_HOME/bin

maybe more stuff